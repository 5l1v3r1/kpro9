@book{book:softarc,
  title = {Software Architecture in Practice},
  publisher = {Addison-Wesley},
  year = {2003},
  author = {Lee Bass, Paul Clements, Rick Kazmann},
  edition = {Second Edition},
  month = {April},
  owner = {Erik Bergersen},
  timestamp = {2011.10.05}
}

@book{Bass2003,
	title = {Software Architecture in Practice, Second Edition},
	author = {Bass, Len and Clements, Paul and Kazman, Rick},
	publisher = {{Addison-Wesley} Professional},
	year = 2003,
	month = {April},
	isbn = {0321154959},
	keywords = {software-design programming software-engineering software-development best-practice efficiency architecture management}
}

@book{Kerninghan1988,
	title = {The C Programming Language},
	author = {Kernighan, Brian W. and Ritchie, Dennis M.},
	publisher = {Prentice Hall},
	year = 1988,
	month = {April},
	isbn = {0131103628},
	keywords = {C programming language}
}

@article{Raymond1999,
	author = {Raymond, Eric},
	title = {The Cathedral and the Bazaar},
	journal = {Knowledge, Technology \& Policy},
	publisher = {Springer Netherlands},
	issn = {0897-1986},
	keyword = {Journals},
	pages = {23-49},
	volume = {12},
	issue = {3},
	abstract = {I anatomize a successful open-source project, fetchmail, that was run as a deliberate test of some theories about software engineering suggested by the history of Linux. I discuss these theories in terms of two fundamentally different development styles, the "cathedral" model, representing most of the commercial world, versus the "bazaar" model of the Linux world. I show that these models derive from opposing assumptions about the nature of the software-debugging task. I then make a sustained argument from the Linux experience for the proposition that "Given enough eyeballs, all bugs are shallow," suggest productive analogies with other self-correcting systems of selfish agents, and conclude with some exploration of the implications of this insight for the future of software.},
	year = {1999}
}

@misc{ThalesNO,
	title = {Thales Norway AS},
	howpublished = {\url{http://thales.no/pub/sites/index.php?siteID=4&m=1}},
	note = {Accessed: 09. November 2011}
}

@misc{WiresharkORG,
	title = {Wireshark - About},
	howpublished = {\url{http://www.wireshark.org/about.html}},
	note = {Accessed: 09. November 2011}
}

@misc{LuaORG,
	title = {Lua: about},
	howpublished = {\url{http://www.lua.org/about.html}},
	note = {Accessed: 09. November 2011}
}

@misc{JavaCOM,
	title = {Java},
	howpublished = {\url{http://www.java.com}},
	note = {Accessed: 09. November 2011}
}

@misc{PythonORG,
	title = {Python},
	howpublished = {\url{http://www.python.org/about/}},
	note = {Accessed: 09. November 2011}
}

@techreport{Compendium,
	author = {IDI, NTNU},
	title = {Compendium: Introduction to course TDT4290 Customer Driven Project, Autumn 2011},
	institution = {Department of Computer and Information Science, NTNU},
	month = {August},
	year = {2011},
	number = {ISSN: 1503-416X}
}

@manual{IEEE829,
	title = {IEEE Standard for Software Test Documentation},
	author = {Software Engineering Technical Committee of the IEEE Computer Society},
	edition = {IEEE Std 829-1998},
	month = {16. September},
	year = {1998}
}






